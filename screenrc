# Turn off the initial welcome message
startup_message off

# Scroll back buffer for new windows.
defscrollback 10000

# Status bar
#hardstatus alwayslastline
#hardstatus string '%{= kG}[%{G}%H%? %1`%?%{g}][%= %{= kw}%-w%{+b yk} %n*%t%?(%u)%? %{-}%+w %=%{g}][%{B}%m/%d %{W}%C%A%{g}]'

#backtick 1 5 5 true
#termcapinfo rxvt* 'hs:ts=\E]2;:fs=\007:ds=\E]2;\007'
#hardstatus string "screen (%n: %t)"
#caption string "%{= kw}%Y-%m-%d;%c %{= kw}%-Lw%{= kG}%{+b}[%n %t]%{-b}%{= kw}%+Lw%1`"
#caption always

truecolors on
hardstatus off
backtick 0 5 5 "/bin/date" '+%Y-%m-%d'
backtick 1 5 5 "/bin/date" '+%H:%M'
#hardstatus alwayslastline '%{#00ff00}[ %H ][%{#ffffff}%= %{7}%?%-Lw%?%{1;0}%{1}(%{15}%n%f%t%?(%u)%?%{1;0}%{1})%{7}%?%+Lw%?%? %=%{#00ff00}][ %{#00ff00} %l %{#00ff00} ][ %{#00a5ff}%{6}%0` %{#ffffff}%{7}%1`%{#00ff00} ]'
hardstatus alwayslastline '%{#00ff00}[ %H ][%= %{= w}%?%-Lw%?%{= R}%n*%f %t%?%{= R}(%u)%?%{= w}%+Lw%?%= %{#00ff00}][ %{#00ff00} %l %{#00ff00} ][ %{#00a5ff}%{6}%0` %{#ffffff}%{7}%1`%{#00ff00} ]'


#hardstatus alwayslastline '%{= G}[ %{G}%H %{g}][%= %{= w}%?%-Lw%?%{= R}%n*%f %t%?%{= R}(%u)%?%{= w}%+Lw%?%= %{= g}][ %{y}Load: %l %{g}][%{B}%Y-%m-%d %{W}%c:%s %{g}]'

# Clear scrollback after leaving a fullscreen program
altscreen on

# Allow scrolling
termcapinfo xterm* ti@:te@

# default windows
screen -t shell1 1 bash
screen -t shell2 2 bash
select 0
bind c screen 1 # window numbering starts at 1 not 0
bind 0 select 10

# get rid of silly xoff stuff
bind s split

# switch windows with F3 (prev layout) and F4 (next)
bindkey "^[OR" prev
bindkey "^[OS" next

# split horizontally creating new shell prompt
bind - eval split 'focus down' screen

# split vertically creating new shell prompt
bind | eval 'split -v' 'focus right' screen

# hide the vertical and horizontal split lines respectively,
rendition so "="
caption string "%{= dd}"

# Switch between regions using ctrl and arrows
bindkey "^[[1;5D" focus left
bindkey "^[[1;5C" focus right
bindkey "^[[1;5A" focus up
bindkey "^[[1;5B" focus down

# F2 puts screen in resize mode. Resize regions using hjkl keys.
bindkey "^[OQ" eval "command -c rsz" # enter resize mode

# Use hjkl keys to resize regions
bind -c rsz h eval "resize -h -5" "command -c rsz"
bind -c rsz j eval "resize -v -5" "command -c rsz"
bind -c rsz k eval "resize -v +5" "command -c rsz"
bind -c rsz l eval "resize -h +5" "command -c rsz"
